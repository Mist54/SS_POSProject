-- Create Database
CREATE DATABASE SSPOS
GO

-- Switch to the new database
USE SSPOS
GO

-- Create SQL Authentication Login
CREATE LOGIN SSPOS_Admin WITH PASSWORD = 'SSPOS-Admin@123'
GO

-- Create User in the database
CREATE USER SSPOS_Admin FOR LOGIN SSPOS_Admin
GO

-- Grant necessary permissions (e.g., db_owner role)
EXEC sp_addrolemember 'db_owner', 'SSPOS_Admin'
GO


CREATE TABLE Product (
    ProductID INT PRIMARY KEY IDENTITY(1,1),
    Name VARCHAR(255) NOT NULL,
    Code INT NOT NULL,
    UOM VARCHAR(50) NOT NULL,
    Price DECIMAL(10,2) NOT NULL,
    ProductType VARCHAR(50) NOT NULL,
    Loose BIT NOT NULL,
    Category VARCHAR(20) NOT NULL,
    Subcategory VARCHAR(20) NOT NULL,
    RegularPrice DECIMAL(10,2) NOT NULL,
    DirectPrice DECIMAL(10,2) NOT NULL,
    OutsidePrice DECIMAL(10,2) NOT NULL,
    CreatedBy VARCHAR(100),
    CreatedDate DATETIME DEFAULT GETDATE(),
    ModifiedBy VARCHAR(100),
    ModifiedDate DATETIME DEFAULT GETDATE(),
    IsDeleted BIT DEFAULT 0
);



CREATE PROCEDURE Product_RetriveAll
AS
BEGIN
    SET NOCOUNT ON;
    
    -- Select necessary columns
    SELECT ProductID, Name, Code, UOM, Price, ProductType, Loose, Category, Subcategory, 
           RegularPrice, DirectPrice, OutsidePrice, CreatedDate, ModifiedDate
    FROM Product;
END;


//SS-->18-05-2024 -New table Creation "TableList "
CREATE TABLE TableList (
    TableID INT PRIMARY KEY,
    TableName VARCHAR(50) NOT NULL,
    Capacity INT DEFAULT 4,
    TableType VARCHAR(50),
    Position VARCHAR(50),
    FloorOrSection VARCHAR(50),
    Status VARCHAR(20),
    Description VARCHAR(100),
    ReservationID INT,
    IsReserved BIT,
    Notes VARCHAR(255),
    CreatedBy VARCHAR(50),
    CreatedDate DATETIME,
    ModifiedBy VARCHAR(50),
    ModifiedDate DATETIME,
    IsDeleted BIT
);


--Dummy record insertion //SS-->18-05-2024
INSERT INTO TableList (TableID, TableName, Capacity, TableType, Position, FloorOrSection, Status, Description, ReservationID, IsReserved, Notes, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
VALUES
    (1, 'G_Table101', 4, 'Dining', 'Window-side', 'Ground', 'Available', 'Window-side table with a view', NULL, 0, 'Table near the entrance', 'Admin', GETDATE(), NULL, NULL, NULL),
    (2, 'F_Table102', 6, 'Conference', 'Terrace', 'First', 'Occupied', 'Large round table for meetings', 101, 1, 'Reserved for corporate event', 'Manager', GETDATE(), NULL, NULL, NULL),
    (3, 'G_Table103', 2, 'Dining', 'Bar Area', 'Ground', 'Available', 'High-top table for couples', NULL, 0, 'Intimate seating arrangement', 'Admin', GETDATE(), NULL, NULL, NULL),
    (4, 'F_Table104', 4, 'Dining', 'Corner', 'First', 'Available', 'Corner table with a cozy atmosphere', NULL, 0, 'Perfect for small gatherings', 'Admin', GETDATE(), NULL, NULL, NULL),
    (5, 'S_Table105', 4, 'Dining', 'Main Hall', 'Second', 'Available', 'Central table in the main dining area', NULL, 0, 'Visible from all sides', 'Admin', GETDATE(), NULL, NULL, NULL),
    (6, 'G_Table106', 6, 'Conference', 'Meeting Room', 'Ground', 'Available', 'Conference table with AV equipment', NULL, 0, 'Equipped with projector and sound system', 'Manager', GETDATE(), NULL, NULL, NULL),
    (7, 'F_Table107', 2, 'Dining', 'Terrace', 'First', 'Available', 'Table with outdoor seating', NULL, 0, 'Great for enjoying the view', 'Admin', GETDATE(), NULL, NULL, NULL),
    (8, 'S_Table108', 4, 'Dining', 'Main Hall', 'Second', 'Available', 'Spacious table in the main dining area', NULL, 0, 'Accommodates larger groups', 'Admin', GETDATE(), NULL, NULL, NULL),
    (9, 'F_Table109', 4, 'Dining', 'Window-side', 'First', 'Available', 'Table by the window with natural light', NULL, 0, 'Ideal for romantic dinners', 'Admin', GETDATE(), NULL, NULL, NULL),
    (10, 'G_Table110', 2, 'Dining', 'Corner', 'Ground', 'Available', 'Cozy corner table for two', NULL, 0, 'Private seating option', 'Admin', GETDATE(), NULL, NULL, NULL);


--New Procedure for get all table list //SS-->18-5-2024
CREATE PROCEDURE GetAllTableName
AS
BEGIN 
	SELECT TableName FROM dbo.TableList;
END;	

